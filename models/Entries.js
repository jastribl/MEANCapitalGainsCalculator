// Generated by CoffeeScript 1.9.3
(function() {
  var Entries, cleanEntry, db, entriesTable, findEntry;

  db = require('../utilities/DB');

  entriesTable = db.get('entries');

  Entries = {
    deleteAllEntriesForStockWithName: function(stockName) {
      return entriesTable.remove({
        stockName: stockName
      }, function(err) {
        if (err) {
          throw err;
        }
      });
    },
    getAllEntries: function() {
      return entriesTable.find({}, function(err, entries) {
        if (err) {
          throw err;
        }
        return entries;
      });
    },
    getEntriesForStockOrdered: function(stockName) {
      return entriesTable.find({
        stockName: stockName
      }, {
        sort: {
          year: 1,
          month: 1,
          day: 1,
          tradeNumber: 1
        }
      }, function(err, entries) {
        if (err) {
          throw err;
        }
        return entries;
      });
    },
    removeEntryById: function(_id) {
      return entriesTable.remove({
        _id: _id
      }, function(err) {
        if (err) {
          throw err;
        }
      });
    },
    addEntry: function(entry) {
      entry = cleanEntry(entry);
      return entriesTable.insert(entry).then(function() {
        return findEntry(entry);
      });
    },
    updateEntry: function(entry) {
      entry = cleanEntry(entry);
      return entriesTable.update({
        _id: entry._id
      }, entry, function(err) {
        if (err) {
          throw err;
        }
      }).then(function() {
        return findEntry(entry);
      });
    }
  };

  module.exports = Entries;

  cleanEntry = function(entry) {
    entry.year = +entry.year;
    entry.month = +entry.month;
    entry.day = +entry.day;
    entry.tradeNumber = +entry.tradeNumber;
    return entry;
  };

  findEntry = function(entry) {
    return entriesTable.findOne({
      stockName: entry.stockName,
      year: entry.year,
      month: entry.month,
      day: entry.day,
      tradeNumber: entry.tradeNumber
    }, function(err, foundEntry) {
      if (err) {
        throw err;
      }
      return foundEntry;
    });
  };

}).call(this);
